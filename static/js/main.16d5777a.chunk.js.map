{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","userId","completed","useState","isCompleted","setIsCompleted","classNames","type","onClick","TodoList","todos","map","username","getUser","usersFromServer","find","App","setTitle","correctTitle","setCorrectTitle","setUserId","chosenUser","setChosenUser","toDoItem","Math","max","regex","action","method","onSubmit","event","preventDefault","trim","match","push","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16d5777a.chunk.js","sourcesContent":["import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport './TodoInfo.scss';\nimport { useState } from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    userId,\n    completed,\n    user,\n  } = todo;\n\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  const handleToggle = () => {\n    setIsCompleted(!isCompleted);\n  };\n\n  return (\n    <li\n      data-id={id}\n      className={\n        classNames(\n          'TodoInfo',\n          {\n            'TodoInfo--completed': completed || isCompleted,\n          },\n        )\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo key={userId} user={user} />}\n\n      <button\n        type=\"submit\"\n        className=\"TodoInfo__toggle\"\n        onClick={handleToggle}\n      >\n        Completed\n      </button>\n    </li>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </ul>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport './field.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [correctTitle, setCorrectTitle] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [chosenUser, setChosenUser] = useState(false);\n\n  const newTodoId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n  const toDoItem = {\n    id: newTodoId,\n    title,\n    userId,\n    completed: false,\n    user: getUser(userId),\n  };\n\n  const regex = /^[\\p{L}\\d\\s]+$/u;\n\n  const addTodo = (id: number) => {\n    if (getUser(id) && title.trim().match(regex)) {\n      todos.push(toDoItem);\n\n      setUserId(0);\n      setTitle('');\n    }\n\n    if (!title.trim().match(regex)) {\n      setCorrectTitle(true);\n    }\n\n    if (!userId) {\n      setChosenUser(true);\n    }\n  };\n\n  const handleForm = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addTodo(userId);\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setCorrectTitle(false);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setChosenUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleForm}\n        className=\"field\"\n      >\n        <div>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            className=\"field__input\"\n            value={title}\n            onChange={handleTitle}\n            title={'Your title can include only letters, digits, and \"spaces\"'}\n          />\n          {correctTitle && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            className=\"field__input\"\n            value={userId}\n            onChange={handleUser}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {chosenUser && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"field__submit\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}